From cceadc90675b338e6cdc9416095f683d0aec477d Mon Sep 17 00:00:00 2001
From: Yaroslav Halchenko <debian@onerussian.com>
Date: Thu, 13 Jan 2011 20:44:19 -0500
Subject: [PATCH 3/3] import similarity_measures as _sms in histogram_registration.py

otherwise imilarity_measures, named dentically as the module itself,
imported in __init__.py from histogram_registration.py overloads module itself
---
 .../registration/histogram_registration.py         |    6 +++---
 1 files changed, 3 insertions(+), 3 deletions(-)

diff --git a/nipy/algorithms/registration/histogram_registration.py b/nipy/algorithms/registration/histogram_registration.py
index 9f0ec26..563b567 100644
--- a/nipy/algorithms/registration/histogram_registration.py
+++ b/nipy/algorithms/registration/histogram_registration.py
@@ -19,7 +19,7 @@ from .constants import _OPTIMIZER, _XTOL, _FTOL, _GTOL, _STEP
 from ._registration import _joint_histogram
 from .affine import inverse_affine, subgrid_affine, affine_transforms
 from .chain_transform import ChainTransform 
-from .similarity_measures import similarity_measures
+from .similarity_measures import similarity_measures as _sms
 
 
 # Module global - enables online print statements
@@ -154,9 +154,9 @@ class HistogramRegistration(object):
         self._vox_coords = np.indices(self._from_data.shape).transpose((1,2,3,0))
 
     def _set_similarity(self, similarity='cr', **kwargs): 
-        if similarity in similarity_measures: 
+        if similarity in _sms:
             self._similarity = similarity
-            self._similarity_call = similarity_measures[similarity](self._joint_hist.shape, **kwargs)
+            self._similarity_call = _sms[similarity](self._joint_hist.shape, **kwargs)
         else: 
             if not hasattr(similarity, '__call__'):
                 raise ValueError('similarity should be callable')
-- 
1.7.2.3

